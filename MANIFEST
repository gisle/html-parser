Changes			History of this package
MANIFEST		This file
Makefile.PL		Will create 'Makefile' to build this extention
Parser.pm		Bootstrap & documentation
Parser.xs		XS glue
README			The Instructions
TODO			Ideas and things still left to do
eg/hanchors		Extract all links from a document
eg/hdump		Show how a document is parsed
eg/hform		Parse <forms> using HTML::PullParser
eg/hlc		        Downcase tag and attribute names
eg/hrefsub		Do substitutions on link attributes
eg/hstrip		Stip away certains tags/elements and attributes
eg/htext		Leave only the text
eg/htextsub	        Do substitutions only on the text content
eg/htitle               Extract document title
hints/solaris.pl	Avoid compiler bug
hparser.c		Parser implementation
hparser.h		Parser implementation (data structures)
lib/HTML/Entities.pm	Encode and decode entities in strings
lib/HTML/Filter.pm	HTML::Filter class
lib/HTML/HeadParser.pm  HTML::HeadParser class
lib/HTML/LinkExtor.pm   HTML::LinkExtor class
lib/HTML/PullParser.pm  HTML::PullParser class
lib/HTML/TokeParser.pm	HTML::TokeParser class
mkhctype		Generates 'hctype.h'
mkpfunc			Generates 'pfunc.h'
t/api_version.t         Test api_version constructor option
t/argspec-bad.t         Test various bad argspec arguments
t/argspec.t		Test argspec
t/argspec2.t		Test new argspecs @attr, @{...}
t/attr-encoded.t	Test attr_encoded option
t/callback.t		Use callback to get data
t/case-sensitive.t	Test case_sensitive option
t/cases.t		Test various interesting cases
t/comment.t             Test comment parsing
t/crashme.t             Parse random data
t/declaration.t         Test declaration parsing
t/default.t		Test default handler
t/document.t		Test {start,end}_document behaviour
t/dtext.t               Test dtext decoding of entities
t/entities.t		Test encoding/decoding of entities
t/entities2.t		Test _decode_entities()
t/filter-methods.t	Test ignore_tags, ignore_elements methods.
t/filter.t		Test HTML::Filter
t/free.t		Test freeing of active parser
t/handler-eof.t         Test invocation of $p->eof in handlers
t/handler.t		Test $p->handler method
t/headparser-http.t	Test HTML::HeadParser
t/headparser.t		Test HTML::HeadParser
t/ignore.t		Test elements ignored by handler = '' or 0
t/largetags.t		Test with very large tags
t/linkextor-base.t	Test HTML::LinkExtor
t/linkextor-rel.t	Test HTML::LinkExtor
t/magic.t		Test that checking magic head in p_state works
t/marked-sect.t         Test marked section support
t/msie-compat.t		Test some MSIE compatibility edge cases
t/offset.t		Test attrspec offset
t/options.t             Test set/get for various parser options
t/parsefile.t		Test the $p->parse_file() method
t/parser.t		Test HTML::Parser subclassing
t/pod.t			Test pod correctness
t/plaintext.t		Test parsing of <plaintext>
t/process.t		Test process instruction support
t/pullparser.t		Test HTML::PullParser
t/script.t              Test parsing of <script> with quoted strings
t/skipped-text.t	Test skipped_text argspec
t/stack-realloc.t	Test that stack reallocation bug don't come back
t/textarea.t	        Test handling of <textarea>
t/threads.t		Test thread safety
t/tokeparser.t		Test HTML::TokeParser
t/uentities.t           Test encoding/decoding of Unicode entities
t/unbroken-text.t       Test unbroken_text option
t/unicode.t		Test parsing of Unicode text
t/unicode-bom.t		Test handling of the Unicode BOM character
t/xml-mode.t		Test parsing in XML mode
tokenpos.h		Dynamically sized token_pos arrays
typemap			Convert between HTML::Parser and 'struct p_state'
util.c			Some utility functions
